AWSTemplateFormatVersion: 2010-09-09
Description: Apper DevOps Engineer Technical Challenge - Karing Ramos - Tier 1 - CI/CD

Parameters:
  EBStack:
    Type: String
    Description: Elastic Beanstalk Stack Name
    Default: kramos-tier1-eb

  AWSAccount:
    Type: String
    Description: Default AWS Account
    Default: '485323199507'

  VPCStack:
    Type: String
    Description: Name of the VPC and RDS stack
    Default: kramos-tier1-vpc-rds

Resources:
  GithubLink:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: github-source-kramos
      ProviderType: GitHub
      Tags:
      - Key: Name
        Value: github-source-kramos

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref Bucket
        Type: S3
      Name: pipeline-kramos
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt PipelineRole.Arn
      Stages: 
        - Name: Source
          Actions:
            - Name: SourceBuild
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !GetAtt GithubLink.ConnectionArn
                FullRepositoryId: karingram0s/apper-submission
                BranchName: master
                OutputArtifactFormat: CODEBUILD_CLONE_REF
              OutputArtifacts:
                - Name: express-minapp
              RunOrder: 1
            - Name: SourceCfn
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !GetAtt GithubLink.ConnectionArn
                FullRepositoryId: karingram0s/apper-submission
                BranchName: master
                OutputArtifactFormat: CODE_ZIP
              OutputArtifacts:
                - Name: sourcerepo
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
                PrimarySource: express-minapp
              InputArtifacts:
                - Name: express-minapp
              OutputArtifacts:
                - Name: express-minapp-build
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CreateChangeSetVPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: sourcerepo
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt StackRole.Arn
                StackName: !Ref VPCStack
                ChangeSetName: vpc-rds-changeset
                # TemplateConfiguration:
                TemplatePath: sourcerepo::cfn-templates/vpc-rds-setup.yaml 
              RunOrder: 1
            - Name: CreateChangeSetEB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: sourcerepo
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt StackRole.Arn
                StackName: !Ref EBStack
                ChangeSetName: eb-changeset
                Capabilities: CAPABILITY_IAM
                # TemplateConfiguration:
                TemplatePath: sourcerepo::cfn-templates/eb.yaml
              RunOrder: 1
            - Name: ExecuteChangeSetVPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: vpc-rds-changeset
                RoleArn: !GetAtt StackRole.Arn
                StackName: !Ref VPCStack
              RunOrder: 2
            - Name: ExecuteChangeSetEB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: eb-changeset
                RoleArn: !GetAtt StackRole.Arn
                StackName: !Ref EBStack
              RunOrder: 2
            - Name: DeployApp
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: '1'
              Configuration:
                ApplicationName:
                  Fn::ImportValue:
                    !Sub ${EBStack}-EBApp
                EnvironmentName:
                  Fn::ImportValue:
                    !Sub ${EBStack}-EBEnv
              InputArtifacts:
                - Name: express-minapp-build
              RunOrder: 3                   
      Tags:
      - Key: Name
        Value: pipeline-kramos

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts: 
        Type: CODEPIPELINE
      Cache:
        Type: S3
        Location: !Join [ '/', [!Ref Bucket, 'cache']]
      ConcurrentBuildLimit: 3
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
      Name: buildproject-kramos
      QueuedTimeoutInMinutes: 5
      ServiceRole: !GetAtt BuildRole.Arn 
      Source: 
        Type: CODEPIPELINE
      TimeoutInMinutes: 5
      Tags:
      - Key: Name
        Value: buildproject-kramos 

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: codepipeline-role-kramos      
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codepipeline.amazonaws.com
                - s3.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: pipeline-iampolicy-kramos
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - codebuild.amazonaws.com
                      - codepipeline.amazonaws.com
                      - codestar-connections.amazonaws.com
                      - ec2.amazonaws.com
                      - s3.amazonaws.com
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:Describe*
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:Update*
                  - cloudformation:ValidateTemplate
                  - codedeploy:*
                  - codestar-connections:*
                  - iam:PassRole
                Resource: '*'
              - Effect: Allow
                Action:
                  - codebuild:Batch*
                  - codebuild:Start*
                Resource: !GetAtt BuildProject.Arn
              # - Effect: Allow
              #   Action:
              #     - codestar-connections:UseConnection
              #   Resource: !Ref GithubLink
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !GetAtt Bucket.Arn
              - Effect: Allow
                Action:
                  - elasticbeanstalk:*
                Resource:
                  - !Join ['', [!Sub 'arn:aws:elasticbeanstalk::${AWSAccount}:application/', Fn::ImportValue: !Sub '${EBStack}-EBApp']]
                  - !Sub 'arn:aws:elasticbeanstalk:*:${AWSAccount}:applicationversion/*/*'
                  - !Sub 'arn:aws:elasticbeanstalk:*:${AWSAccount}:configurationtemplate/*/*'
                  - !Sub 'arn:aws:elasticbeanstalk:*:${AWSAccount}:environment/*/*'
                  - arn:aws:elasticbeanstalk:::platform/*
                  - arn:aws:elasticbeanstalk:::solutionstack/*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleCore
      Tags:
      - Key: Name
        Value: codepipeline-role-kramos

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: codebuild-role-kramos
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
                - s3.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: build-iampolicy-kramos
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:Batch*
                  - codebuild:Create*
                  - codebuild:UpdateReport
                  - codestar-connections:*
                  - logs:Create*
                  - logs:PutLogEvents
                  - s3:Get*
                  - s3:List*
                  - s3:Put*
                Resource: '*'
                  # - arn:aws:s3:::*
                  # - arn:aws:logs:*:*:log-group:/aws/codebuild/*
                  # - arn:aws:codebuild:*
              # - Effect: Allow
              #   Action:
              #     - codestar-connections:UseConnection
              #   Resource: !Ref GithubLink
      Tags:
      - Key: Name
        Value: codebuild-role-kramos

  StackRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: stack-role-kramos
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action: 'sts:AssumeRole'
          Principal:
            Service: cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: stack-iampolicy-kramos
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:*
                  - elasticbeanstalk:*
                  - elasticloadbalancing:*
                  - iam:*
                  - rds:*
                  - secretsmanager:*
                Resource: '*'
      Tags:
      - Key: Name
        Value: stack-role-kramos

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: sourcebucket-kramos
      Tags:
        - Key: Name
          Value: sourcebucket-kramos

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket 
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:*
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringLike:
                'aws:userId':
                  - !Join [':', [!GetAtt PipelineRole.RoleId, '*']]
                  - !Join [':', [!GetAtt BuildRole.RoleId, '*']]
                  - !Ref AWSAccount